/* YV JAWAHAR */


/*Given two strings word1 and word2, return the minimum number of steps required to make word1 and word2 the same.
In one step, you can delete exactly one character in either string.*/

/*logic used :find the length of longest common subsequence and return the difference between sum of the length of two string 
and double the value of length of longest subsequence*/

 
#include<bits/stdc++.h>
using namespace std;
void fastIO()
{
	ios::sync_with_stdio(false);
    cin.tie(0);
}
int lcs(int n ,int m,string &s, string&t,vector<vector<int>>&dp)
    {
        if(n<0 ||m<0)return 0;
        if(dp[n][m]!=-1) return dp[n][m];
        if(s[n]==t[m]) return dp[n][m]=1+lcs(n-1,m-1,s,t,dp);
        return dp[n][m]=max(lcs(n-1,m,s,t,dp),lcs(n,m-1,s,t,dp));
    }
void solve(string s,string t)
{
        int n=s.size();
        int m=t.size();
        vector<vector<int>>dp(n,vector<int>(m,-1));
        int length=lcs(n-1,m-1,s,t,dp);
        cout<<n+m-2*length;
}
	
int main()
{
    fastIO();
	ll t=1;l
	cin>>t;
	while(t--)
	     solve();
    return 0;


 }
